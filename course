МИНИСТЕРСТВО ОБРАЗОВАНИЯ РЕСПУБЛИКИ БЕЛАРУСЬ
БЕЛОРУССКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ
ФАКУЛЬТЕТ СОЦИОКУЛЬТУРНЫХ КОММУНИКАЦИЙ
Кафедра информационных технологий 
 
 

  
 
ИНТЕРНЕТ–ВИТРИНА ВОДОНАГРЕВАТЕЛЕЙ
«HEATER»
Курсовой проект
 
 
 
 
 
Батаршина Евгения Анатольевича 
студента 4 курса, 
специальность  
«Прикладная информатика» 
Научный руководитель: 
Доцент кафедры информационных технологий, Царик Сергей Всеволодович 
 



Минск, 2020 
ОГЛАВЛЕНИЕ 
ВВЕДЕНИЕ	1 
ГЛАВА 1. ОБЗОР ТЕХНОЛОГИЙ И СРЕДСТВ РАЗРАБОТКИ	2 
1.1 Spring Framework	4 
1.2 IntelliJ IDEA	5 
1.3 HTML, CSS, Bootsrap Framework	6 
ГЛАВА 2. РЕАЛИЗАЦИЯ ПОЛЬЗОВАТЕЛЬСКОЙ ЧАСТИ (UI)	8  
2.1 Информационная структура сайта	8 
2.1 Графический дизайн сайта	9 
ГЛАВА 3. РЕАЛИЗАЦИЯ СЕРВЕРНОЙ ЧАСТИ	12 
3.1 Используемые технологии для разработки сайта	 
3.2 Разработка структуры базы данных	 
3.3 Разработка страниц сайта	 
3.4 Разработка раздела администрирования	 
ЗАКЛЮЧЕНИЕ	 
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ	 
ПРИЛОЖЕНИЯ	 

 	 















ВВЕДЕНИЕ 
Водонагреватели играют немаловажную роль в жизни современных людей. Для жителей квартир водонагреватель — устройство, помогающее сохранить высокий уровень комфорта вне зависимости от графика подачи горячей воды. Для владельцев загородных домов и дач — это едва ли ни единственный способ обеспечить полноценное автономное горячее водоснабжение. 
Основная цель курсового проекта – разработать адаптивную интернет-витрину водонагревателей, в которой пользователь сможет узнать всю необходимую информацию о них: цену, описание, фотографии и выбрать водонагреватель по душе. На сайте будет осуществлена авторизация администратора. Авторизованный администратор сможет создавать, редактировать и удалять водонагреватели. 
Для достижения цели были сформулированы следующие задачи: 
	Постановка целей и задач сайта.
	Обзор технологий и средств разработки. 
	Реализация серверной части. 
	Реализация пользовательской части. 
 
     
 
 
 
 
 
 
 








ГЛАВА 1. ОБЗОР ТЕХНОЛОГИЙ И СРЕДСТВ РАЗРАБОТКИ
Для разработки сайта использовались следующие технологии:  
	Фреймворк Java Spring MVC
	HTML+ фреймворк «Bootstrap»
	Веб-приложение PhpMyAdmin, представляющее из себя интерфейс для администрирования MySQL. 
1.1. Spring Framework 
Spring Framework – универсальный фреймворк с открытым исходным кодом для Java-платформы. Spring Framework обеспечивает комплексную программную модель для современных Java приложений. Ключевой элемент Spring – это инфраструктурная поддержка приложений таким образом, чтобы команда разработчиков могла сфокусироваться на бизнес логике приложения которое они пишут, а не на технических деталях платформы, на которую они устанавливают приложение [: https://smartcoderteam.github.io/what-is-spring-framework-andexample-of-di/].
Spring – это не один конкретный фреймворк. Это общее названия для целого ряда небольших фреймворков, каждый из которых выполняет свою работу. У Spring Framework модульная структура. Это позволяет подключать только те модули, что нам нужны для приложения.
MVC — это паттерн проектирования веб-приложений, который включает в себя несколько более мелких шаблонов. При использовании MVC на три отдельных компонента разделены модель данных приложения, пользовательский интерфейс и логика взаимодействия пользователя с системой, благодаря чему модификация одного из этих компонентов оказывает минимальное воздействие на остальные или не оказывает его вовсе [https://web-creator.ru/articles/mvc].
	Модель – это данные и правила, которые используются для работы с данными и представляют концепцию управления приложением. В любом приложении вся структура моделируется как данные, которые обрабатываются определённым образом. 
	Вид обеспечивает различные способы представления данных, которые получены из модели. Он может быть шаблоном, который заполняется данными. Может быть несколько различных видов, и контроллер выбирает, какой подходит наилучшим образом для текущей ситуации. В основном вид генерирует HTML, который пользователь видит в своём браузере.
	Контроллер – управляет запросами пользователя. Его основная функция — вызывать и координировать действие необходимых ресурсов и объектов, нужных для выполнения действий, задаваемых пользователем. Обычно контроллер вызывает соответствующую модель для задачи и выбирает подходящий вид.
Spring Security - это фреймворк, который сфокусирован на обеспечение как аутентификации, так и авторизации в Java-приложениях. Как и все Spring проекты, настоящая сила Spring Security в том, что он может быть легко дополнен нужным функционалом [https://spring-projects.ru/projects/spring-security/].
1.2. IntelliJ IDEA  
Программное обеспечение JetBrains IntelliJ IDEA – это ведущая среда быстрой разработки на языке Java. IntelliJ IDEA представляет собой высокотехнологичный комплекс тесно интегрированных инструментов программирования, включающий интеллектуальный редактор исходных текстов с развитыми средствами автоматизации,  системами управления версиями, уникальный инструмент оптимизации и проверки кода Code Inspection, а также инновационный визуальный конструктор графических интерфейсов [https://itpro.ua/product/jetbrains-intellij-idea/?tab=description]. 
Хотя платформа ориентирована, в первую очередь, на Java-кодинг, ее универсальность позволяет работать с разными языками. У IntelliJ IDEA красивый и интуитивный интерфейс, который позволяет разобраться даже новичку.
Интерфейс IntelliJ IDEA представлен на рисунке 1.1.
Рисунок 1.5 – Интерфейс IntelliJ IDEA

	К преимуществам IntelliJ IDEA относится:
	IDEA является мощнейшим редактором исходного кода. Здесь есть не только классические подсветки синтаксиса, но и автоматическое добавление нужных импортов с удалением ненужных, встроенное отображение документации несколько буферов обмена. Все это действительно дает прирост к производительности. 
	Интеграция с Github.
	Инструменты для работы с базами данных и SQL файлами, включая удобный клиент и редактор для схемы базы данных.
	Инструменты для запуска тестов и анализа покрытия кода, включая поддержку всех популярных фреймворков для тестирования.
Главный недостаток программного обеспечения IntelliJ IDEA заключается в том, что оно не бесплатное и имеет пробный период 30 дней.
1.3. HTML, CSS, Bootstrap Framework  
HTML5 – стандартизированный язык разметки, позволяющий создавать разнообразные сайты и веб–приложения.
Одним из главнейших отличий HTML5 от предыдущих версий является семантичность. Данные, которые заключены между открывающим и закрывающим тегом должны соответствовать смыслу данного тега. HTML5 вводит несколько новых элементов и атрибутов, которые отражают типичное использование разметки на современных веб-сайтах.
Стилем или CSS называется набор параметров форматирования, который применяется к элементам документа, чтобы изменить их внешний вид. Возможность работы со стилями издавна включают в развитые издательские системы и текстовые редакторы, тем самым позволяя одним нажатием кнопки придать тексту заданный, заранее установленный вид. Теперь это доступно и создателям сайта, когда цвет, размеры текста и другие параметры хранятся в определенном месте и легко «прикручиваются» к любому тегу. Еще одним преимуществом стилей является то, что они предлагают намного больше возможностей для форматирования, чем обычный HTML [http://htmlbook.ru/samcss].
Bootstrap – фреймворк, набор HTML и CSS инструментов и шаблонов для верстки и более эффективного и быстрого создания сайтов и веб-приложений более эффективно и быстро. Bootstrap – это файл или несколько файлов с готовым написанным кодом, которые подключаются к сайту в секции head, после чего становится возможным использование этого фреймворка.
Существует ряд инструментов Bootstrap для создания сайта:
	Шаблоны позволяют изменять оформление элементов. Бывают фиксированные и резиновые CSS шаблоны, которые подключаются сразу после установки Bootstrap. Можно использовать готовые или индивидуальные решения.
	Типографика позволяет форматировать шрифты и создавать заголовки, подзаголовки, абзацы, цитаты и другие структурные элементы.
	Сетка – инструмент для расположения блоков и функциональных элементов за счет заранее заданных размеров колонок. Отображение блоков зависит от устройства и указывается при помощи префиксов и классов. Родительский блок делится на двенадцать частей, с которыми и работает пользователь.
	Медиа позволяет управлять видео, изображениями и другими графическими файлами.
	Навигация является основным элементом любого сайта, позволяя пользоваться вкладками, страницами, меню и тулбаром. Фреймворк содержит дизайны для всех отдельных элементов, позволяя создавать макеты разной сложности.
	Формы используются для отдельных полей, блоков, кнопок, меток и других элементов. Можно выбирать расположение, использовать разделители, 10 подсветку и другие инструменты, управляя не только формами, но и событиями с ними.
	Алерты предполагают оформление всплывающих и диалоговых окон, подсказок, других оповещений. 













ГЛАВА 2. РЕАЛИЗАЦИЯ ПОЛЬЗОВАТЕЛЬСКОЙ ЧАСТИ
	2.1 	Информационная структура сайта 
Информационная структура сайта – это методология организации контентного наполнения веб-сайта, включающая все материалы и связи, позволяющие наполнению, не перебивая взаимодействовать друг с другом. От продуманности и грамотности информационной структуры сайта зависит удобство использования интернет ресурса посетителем. Данная структура создается на этапе проектирования самого сайта и обосновывается в индивидуальном порядке, однако, всегда должна ясно отражать цель бизнеса и повышать сайт в органической выдаче. Контролем данного наполнения занимается контент-менеджер [https://gusarov-group.by/wiki-internet-marketologa/struktura-sajta/]. 
«Draw» – это сервис, предназначенный для формирования диаграмм и схем. Информационная структура сайта, созданная при помощи «Draw» представлена на рисунке 2.1.
Рисунок 2.1 – Информационная структура сайта 
Структура веб-сайта состоит из 6 основных страниц: «Главная», «Продукты», «О нас», «FAQ», «Продукт». А также страниц: «Админ-панель», «Авторизация». 
Хорошая структура сайта делает его удобным не только для посетителей. Поисковым роботам она тоже облегчит работу, в итоге не будет проблем с индексацией страниц. 


	2.2 	Графический дизайн сайта
Проектирование графического дизайна – это крайне важный этап проектирования сайта. Ведь в первую очередь пользователи обращают внимание на визуальный стиль. 
На сайте основными цветовым сочетанием является светло-серый и светло-голубой.  Для сайта используется шрифт Montserrat.
 Графический дизайн некоторых страниц сайта, использующий общую стилистику, предоставлен на рисунках 2.2-2.4. 
Рисунок 2.2 – Главная страница сайта

Рисунок 2.3 – Страница авторизации 

Данный графический дизайн хорошо подходит тематике сайта, имеет хорошее сочетание цветов и шрифта. 

Рисунок 2.4 – Страница Продукта

Административная панель управления содержит общие команды, которые могут понадобиться при управлении сайтом. Ключевое преимущество веб-ресурсов с панелью администратора – наличие интерактивного интерфейса, разрешающего взаимодействовать с материалами и уже добавленными графическими, текстовыми файлами в наглядном режиме. Без админки справляться с поставленными задачами предстоит вручную, заглядывая внутрь компонентов, расположившихся в базе данных выбранного хостинга. 
Админ панель сайта представлена на рисунке 2.5.
Рисунок 2.4 – Страница Продукта

Таким образом, залог успешного функционирования сайта заключается в его своевременном администрировании. Обусловлено это тем, что абсолютно любой сайт нуждается в систематическом обновлении информации, модернизации функционала и оперативном устранении неполадок. 




 








ГЛАВА 1. ОБЗОР ТЕХНОЛОГИЙ И СРЕДСТВ РАЗРАБОТКИ








